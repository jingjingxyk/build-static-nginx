name: build-linux-x86_64

on:
  push:
  pull_request:

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  BUILD_PHP_VERSION: 8.2.27

jobs:
  linux-x86_64:
    if: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Show Environment Info
        run: |
          echo "${{ github.event.head_commit.message }}"
          echo "${{ github.event.workflow_run.head_commit.message }}"
          echo $PATH
          env
          docker info
          id -u
          id -g
          who
          cat /etc/os-release
          hostnamectl
          uname -s
          uname -m
          uname -r

          # echo "BUILD_PHP_VERSION=8.2.4" >> "$GITHUB_ENV"

          cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c
          cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l
          cat /proc/cpuinfo | grep "cpu cores" | uniq
          cat /proc/cpuinfo| grep "processor"| wc -l
          lscpu

          export IPV6=$(ip -6 address show  | grep inet6 | awk '{print $2}' | cut -d'/' -f1 | sed -n '2p')
          export IPV4=$(ip -4 address show  | grep inet | grep -v 127.0.0 | awk '{print $2}' | cut -d'/' -f1 | sed -n '1p')
          echo $IPV4
          echo $IPV6
          echo "X_IPV6=${IPV6}" >> $GITHUB_ENV
          echo "X_IPV4=${IPV4}" >> $GITHUB_ENV

          echo ${{ env.BRANCH_NAME }}

          echo ${{ github.actor }}
          echo ${{ github.repository }}
          echo ${{ github.repository_owner }}
          echo ${{ github.head_ref }}
          echo ${{ github.ref_name }}

      - name: Prepare Build Environment
        run: |
          # git submodule update --init
          # echo "BUILD_PHP_VERSION=${{ matrix.php-version }}" >> $GITHUB_ENV

          sudo mkdir -p /usr/local/swoole-cli
          uid=$(id -u) && gid=$(id -g) && sudo chown -R ${uid}:${gid} /usr/local/swoole-cli

          mkdir -p ${{ github.workspace }}/var/build-github-action-container/

      - name: Cache PHP Runtime
        uses: actions/cache@v4
        id: php-runtime-cache-x86_64
        with:
          path: ${{ github.workspace }}/bin/runtime
          key: ${{ runner.os }}-x86_64-php-runtime

      - name: Cache PHP Vendor
        uses: actions/cache@v4
        id: php-vendor-cache-x86_64
        with:
          path: ${{ github.workspace }}/vendor
          key: ${{ runner.os }}-x86_64-php-vendor

      - name: Cache Dependency Source Code Tarball
        uses: actions/cache@v4
        id: pool-cache
        with:
          path: ${{ github.workspace }}/pool/
          key: source-code-tarball-pool

      - name: Cache all-library
        uses: actions/cache@v4
        id: all-library-cache-x86_64
        with:
          path: /usr/local/swoole-cli
          key: ${{ github.head_ref || github.ref_name }}-${{ runner.os }}-x86_64-all-library

      - name: Cache swoole-cli-builder-image
        uses: actions/cache@v4
        id: swoole-cli-builder-image-cache-x86_64
        with:
          path: ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar
          key: ${{ runner.os }}-x86_64-swoole-cli-builder-image

      - name: Prepare swoole-cli-builder-image
        run: |
          if [ -f ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar ] ; then
              docker load -i  ${{ github.workspace }}/var/build-github-action-container/swoole-cli-builder-image.tar
          else
              bash .github/workflows/build-alpine-builder-container.sh
          fi

      - name: Prepare Runtime and Libraries and Extensions
        run: |
          set -x
          mkdir -p pool/lib
          mkdir -p pool/ext
          mkdir -p bin/runtime
          if [ ! -f bin/runtime/php ] ; then
              bash  setup-php-runtime.sh
          fi

          CACHE_NUM=$(ls -A pool/lib/ | wc -l)
          LIB_NUM=$(ls -A sapi/src/builder/library/ | wc -l)
          echo `expr $LIB_NUM - $CACHE_NUM`

          if test $(ls -A /usr/local/swoole-cli/ | wc -l) -eq 0 ; then
              TAG=all-dependencies-alpine-3.17-php8-v1.0.0-x86_64-20231113T125520Z
              IMAGE="docker.io/jingjingxyk/build-swoole-cli:${TAG}"
              container_id=$(docker create $IMAGE) # returns container ID
              docker cp $container_id:/usr/local/swoole-cli/ /usr/local/
              docker rm $container_id
          fi

          bash sapi/download-box/download-box-get-archive-from-server.sh

          ls -A pool/lib/
          ls -A /usr/local/swoole-cli/

      - name: Build
        uses: addnab/docker-run-action@v3
        with:
          image: swoole-cli-builder:latest
          options: -v ${{ github.workspace }}:/work -w /work -e BUILD_PHP_VERSION=${{ env.BUILD_PHP_VERSION }} -v /usr/local/swoole-cli:/usr/local/swoole-cli
          run: |
            set -eux
            uname -m
            export PATH=/work/bin/runtime:$PATH  # 容器已经内置 php 和 composer
            alias php="php -d curl.cainfo=/work/bin/runtime/cacert.pem -d openssl.cafile=/work/bin/runtime/cacert.pem"

            # bash sapi/quickstart/mark-install-library-cached.sh

            sh  sapi/quickstart/linux/alpine-init.sh
            composer install  --no-interaction --no-autoloader --no-scripts --profile --no-dev
            composer dump-autoload --optimize --profile --no-dev

            php prepare.php  +nginx --with-c-compiler=gcc --with-build-type=release

            bash make-install-deps.sh

            bash ./make.sh all-library
            bash ./make.sh config
            bash ./make.sh build
            bash ./make.sh archive

      - name: Show Build Result
        run: |
          ls ./bin/nginx
          ./bin/nginx/sbin/nginx -V
          NGINX_VERSION=$(echo $(./bin/nginx/sbin/nginx -v 2>&1) | awk -F '/' '{print $2}')
          echo "NGINX_VERSION=${NGINX_VERSION}" >> $GITHUB_ENV

      - name: production artifacts debug
        uses: actions/upload-artifact@v4
        with:
          name: nginx-${{ env.NGINX_VERSION }}-linux-x64
          retention-days: 7
          path: ./bin/nginx

      - name: gh release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: nginx-${{ env.NGINX_VERSION }}-linux-x64.tar.xz


